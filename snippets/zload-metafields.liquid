{%- comment -%} V 2.1.5 {%- endcomment -%}
{% comment %}
################################## BEECLEVER GMBH KOBLENZ ###################################
##### Copyright (c) 2019-present, beeclever GmbH Koblenz DE, All rights reserved.       #####
##### THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR        #####
##### IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS  #####
##### FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR    #####
##### COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER    #####
##### IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN           #####
##### CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.        #####
#############################################################################################

#####  !!!IMPORTANT!!! !!!IMPORTANT!!! !!!IMPORTANT!!! !!!IMPORTANT!!! !!!IMPORTANT!!!  #####
#####                                                                                   #####
##### The contents of this file may not be changed. If the app is updated, we reserve   #####
##### the right to change this file at any time. Possible changes on your part will     #####
##### then be automatically discarded.                                                  #####
#############################################################################################
{% endcomment %}
{%- assign metafields = shop.metafields.bc_cookie -%}

{%- assign bc_cookie_list = null -%}
{%- if metafields.bc_cookie_list.value == blank -%}
    {%- assign bc_cookie_list = metafields.bc_cookie_list -%}
{%- else -%}
    {%- assign bc_cookie_list = metafields.bc_cookie_list.value -%}
{%- endif-%}

{%- assign settings = null -%}
{%- if metafields.settings.value == blank -%}
    {%- assign settings = metafields.settings -%}
{%- else -%}
    {%- assign settings = metafields.settings.value -%}
{%- endif -%}

(()=>{
var sDomain=location.host;
const __useGoogleConsentMode = {%-if settings.useGoogleConsentMode == blank-%} false {%-else-%}{{ settings.useGoogleConsentMode }}{%-endif-%};
const __whiteListForConsentMode = {%-if settings.useGoogleConsentMode != blank and settings.useGoogleConsentMode == true and settings.whiteListForConsentMode != blank-%}{{ settings.whiteListForConsentMode | json }}{%-else-%}[]{%-endif-%};
const __dataLayerName = {%-if settings.useGoogleConsentMode != blank and settings.useGoogleConsentMode == true and settings.dataLayerName != blank-%}{{ settings.dataLayerName | json }}{%-else-%}''{%-endif-%};
(()=>{var i={z:"thirdPartyScriptDefinition",o:"Shopify",c:"analytics",d:"publish",i:"src",l:"provider",p:"type_0",y:"type_1",f:"type_2",n:"true",a:"length",r:"detail",A:"Proxy",j:"setInterval",F:"clearInterval",g:"find",X:"filter",G:"forEach",H:"splice",Z:"hasOwnProperty",M:"addEventListener",u:"includes",h:"push",_:"cookie",P:"set",O:"get",s:"gtag",D:"ad_storage",I:"ad_user_data",T:"ad_personalization",b:"analytics_storage",x:"functionality_storage",C:"personalization_storage",L:"security_storage",R:"wait_for_update",k:"consent",U:"default",q:"ads_data_redaction",B:"google_consent_mode",J:"dataLayer",e:"granted",t:"denied",Q:"update",V:"GDPR_LC:userConsentSetting",W:1500,m:null},o={[i.D]:i.t,[i.I]:i.t,[i.T]:i.t,[i.b]:i.t,[i.x]:i.t,[i.C]:i.t,[i.L]:i.t,[i.R]:i.W};((a,l,t,f,p=[],c=t.J)=>{let y=function(r,e){return!!r[t.g](n=>!!n&&!!e&&n[t.i]&&e[t.i]&&n[t.i]===e[t.i]&&n[t._]===e[t._])},g=r=>f?!!p[t.g](e=>{if(typeof r[t.i]=="string")return r[t.i][t.u](e);if(typeof r[t.l]=="string")return r[t.l][t.u](e)}):!1,u=function(r){let e=[];for(let s=0;s<r[t.a];s++)r[s]||e[t.h](s);let n=r[t.a]-e[t.a];return e[t.G](s=>r[t.H](s,1)),n},d=[],h={[t.P]:(r,e,n,s)=>{let _=u(r);return e===t.a?r[t.a]=_:n!=null&&(y(r,n)||g(n)||(d[e]=n)),!0},[t.O]:(r,e)=>r[e]};if(a[t.z]=new a[t.A](d,h),f){a[c]=a[c]||[],a[t.s]=function(...n){a[c][t.h](n)},a[t.s](t.k,t.U,{...o}),a[t.s](t.P,t.q,!0);let r=a[t.j](()=>{!!a[t.o]&&!!a[t.o][t.c]&&!!a[t.o][t.c][t.d]&&(a[t.F](r),a[t.o][t.c][t.d](t.B,{...o}))},5),e=n=>{Date.now()-t.m<50||(t.m=Date.now(),o[t.D]=n[t.r][t.f][t.n]?t.e:t.t,o[t.I]=n[t.r][t.f][t.n]?t.e:t.t,o[t.T]=n[t.r][t.f][t.n]?t.e:t.t,o[t.b]=n[t.r][t.y][t.n]?t.e:t.t,o[t.x]=n[t.r][t.p][t.n]?t.e:t.t,o[t.C]=n[t.r][t.y][t.n]?t.e:t.t,o[t.L]=n[t.r][t.p][t.n]?t.e:t.t,a[t.s](t.k,t.Q,{...o}))};l[t.M](t.V,e)}})(window,document,i,__useGoogleConsentMode,__whiteListForConsentMode,__dataLayerName);})();
const definitions = [{%- for cookie in bc_cookie_list -%}{%- if cookie[1].src != blank and cookie[1].src != "" -%}{%- assign stripSrcs = cookie[1].src | remove: " " -%}{%- assign srcs = stripSrcs | split: ',' -%}{%- capture domain -%}{%- if cookie[1].domain == blank or cookie[1].domain == "" -%}sDomain{%- else -%}"{{- cookie[1].domain -}}"{%- endif -%}{%- endcapture -%}{%- for src in srcs -%}{%- assign stripSrc = src | strip_html | strip_newlines | strip -%}{%- capture definition -%}{"src": "{{- stripSrc | strip_html | strip_newlines | strip -}}","cookie": "{{ cookie[1].name }}","provider": "{{ cookie[1].provider }}","description": "{{ cookie[1].description }}","expires": {{ cookie[1].expires }},"domain": {{ domain }},"declaration": {{ cookie[1].set }},"group": "{{ cookie[1].group }}"},{%- endcapture -%}{{- definition -}}{%- endfor -%}{%- endif -%}{%- endfor -%}];
definitions.length > 0 && window.thirdPartyScriptDefinition.push(...definitions);
window.BC_JSON_ObjectBypass={{ bc_cookie_list | json}};
const permanentDomain = '{{ shop.permanent_domain }}';
window.BC_GDPR_2ce3a13160348f524c8cc9={'google':[ {%-assign analytics=metafields['bc_tag_manager']['bc_tagManager_ids']['google_analytics']|split:","-%}  {%-assign adWords=metafields['bc_tag_manager']['bc_tagManager_ids']['google_ad_words']-%}  {%-assign gTag=metafields['bc_tag_manager']['bc_tagManager_ids']['google_tag_manager']-%}  {%-if analytics.size > 0-%}  {%-for id in analytics-%} "{{ id | strip }}", {%-endfor-%}  {%-endif-%}  {%-if adWords.size > 3-%} "{{ adWords }}", {%-endif-%}  {%-if gTag.size > 3-%} "{{ gTag }}" {%-endif-%} ], {%-assign facebook=metafields['bc_tag_manager']['bc_tagManager_ids']['facebook']-%}  {%-if facebook.size > 3-%} 'facebook':"{{ facebook }}", {%-endif-%} '_bc_c_set':'customScript','customScriptsSRC':[]};
var GDPR_LC_versionNr=202401311200;var GDPR_LC_ZLoad=function(){var defaultDefinition=[{ "src": "facebook", "cookie": "fr", "provider": "facebook.com", "description": "", "expires": 7776000, "domain": "facebook.com", "declaration": 1, "group": "facebook" }, { "src": "facebook", "cookie": "_fbp", "provider": sDomain, "description": "", "expires": 7776000, "domain": sDomain, "declaration": 1, "group": "facebook" }, { "src": "google-analytics.com", "cookie": "_ga", "provider": sDomain, "description": "", "expires": 63072000, "domain": sDomain, "declaration": 1, "group": "google" }, { "src": "googletagmanager.com", "cookie": "_ga", "provider": sDomain, "description": "", "expires": 63072000, "domain": sDomain, "declaration": 1, "group": "google" }, { "src": "googletagmanager.com", "cookie": "_gid", "provider": sDomain, "description": "", "expires": 86400, "domain": sDomain, "declaration": 1, "group": "google" }, { "src": "googletagmanager.com", "cookie": "_gat", "provider": sDomain, "description": "", "expires": 86400, "domain": sDomain, "declaration": 1, "group": "google" }, { "src": "googleadservices.com", "cookie": "IDE", "provider": sDomain, "description": "", "expires": 63072000, "domain": sDomain, "declaration": 2, "group": "google Ads" }]; if (window.thirdPartyScriptDefinition ===undefined) { window.thirdPartyScriptDefinition=[]; defaultDefinition.forEach(function (value) { window.thirdPartyScriptDefinition.push(value) }) } else { var exist=false; defaultDefinition.forEach(function (script) { window.thirdPartyScriptDefinition.forEach(function (value) { if (value.src ===script.src && value.cookie ===script.cookie) { exist=true } }); if (!exist) { window.thirdPartyScriptDefinition.push(script) } }) } (function polyfill(){if (!Array.from) { Array.from=(function(){var toStr=Object.prototype.toString; var isCallable=function (fn) { return typeof fn ==='function' || toStr.call(fn) ==='[object Function]' }; var toInteger=function (value) { var number=Number(value); if (isNaN(number)) { return 0 } if (number ===0 || !isFinite(number)) { return number } return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number)) }; var maxSafeInteger=Math.pow(2, 53) - 1; var toLength=function (value) { var len=toInteger(value); return Math.min(Math.max(len, 0), maxSafeInteger) }; return function from(arrayLike) { var C=this; var items=Object(arrayLike); if (arrayLike ==null) { throw new TypeError('Array.from requires an array-like object - not null or undefined') } var mapFn=arguments.length > 1 ? arguments[1] : void undefined; var T; if (typeof mapFn !=='undefined') { if (!isCallable(mapFn)) { throw new TypeError('Array.from: when provided, the second argument must be a function') } if (arguments.length > 2) { T=arguments[2] } } var len=toLength(items.length); var A=isCallable(C) ? Object(new C(len)) : new Array(len); var k=0; var kValue; while (k < len) { kValue=items[k]; if (mapFn) { A[k]=typeof T ==='undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k) } else { A[k]=kValue } k +=1 } A.length=len; return A } }()) } })(); var shopifyCookies={ '_s': !1, '_shopify_fs': !1, '_shopify_s': !1, '_shopify_y': !1, '_y': !1, '_shopify_sa_p': !1, '_shopify_sa_t': !1, '_shopify_uniq': !1, '_shopify_visit': !1, 'tracked_start_checkout': !1, 'bc_trekkie_fbp_custom': !1 }; function GDPR_LC_Token(){var getToken={ "tokenLength": 8, "ranToken": '', "randomize": function(){return Math.random().toString(32).substr(2) }, "generate": function(){while (this.ranToken.length <=this.tokenLength) { this.ranToken +=this.randomize() } this.ranToken=permanentDomain + Date.now() + this.ranToken; return btoa(this.ranToken) }, "get": function(){return this.generate() } }; return getToken.get() }; function getCookieValue(a) { var b=document.cookie.match('(^|;)\\s*' + a + '\\s*=\\s*([^;]+)'); return b ? b.pop() : false }; function loadCookieSettings(sessID) { return; var script=document.createElement('script'); script.src='https://cookieapp-staging.beeclever.app/get-cookie-setting?shopify_domain=permanentDomain&token=' + sessID; script.async=false; document.head.appendChild(script); script.addEventListener('load', function(){console.log('UserData loaded') }) };(function setUserCookieData(){window.GDPR_LC_Sess_ID_Name="GDPR_LC_SESS_ID"; window.GDPR_LC_Sess_ID=getCookieValue(window.GDPR_LC_Sess_ID_Name); if (window.GDPR_LC_Sess_ID) { loadCookieSettings(window.GDPR_LC_Sess_ID) } else { window.GDPR_LC_Sess_ID=GDPR_LC_Token() } })(); function setBC_GDPR_LEGAL_custom_cookies(){window['BC_GDPR_LEGAL_custom_cookies']=window['BC_GDPR_LEGAL_custom_cookies'] || {}; window['BC_GDPR_LEGAL_custom_cookies']['list']=window['BC_GDPR_LEGAL_custom_cookies']['list'] || {}; if ('GDPR_legal_cookie' in localStorage) { window['BC_GDPR_LEGAL_custom_cookies']['list']=JSON.parse(window.localStorage.getItem('GDPR_legal_cookie')) } };setBC_GDPR_LEGAL_custom_cookies(); (function(){var hasConsent=!1; Array.from(Object.keys(window['BC_GDPR_LEGAL_custom_cookies']['list'])).forEach(function (c) { if (shopifyCookies.hasOwnProperty(c) && window['BC_GDPR_LEGAL_custom_cookies']['list'][c].userSetting) { hasConsent=!0 } }); var wt=window.trekkie, ws=window.ShopifyAnalytics; if (!hasConsent && wt !==undefined) { wt=[], wt.integrations=wt.integrations || !0, ws=ws.lib=ws.meta=ws.meta.page={}, ws.lib.track=function(){} } })(); window.bc_tagManagerTasks={ "bc_tgm_aw": "google", "bc_tgm_gtm": "google", "bc_tgm_ua": "google", "bc_tgm_fbp": "facebook", "any": "any", "_bc_c_set": "customScript" }; var wl=whiteList=["recaptcha", "notifications.google"]; var GDPR_LC_scriptPath='gdpr-legal-cookie.beeclever.app'; if (window.GDPR_LC_Beta_activate !==undefined && window.GDPR_LC_Beta_activate) { GDPR_LC_scriptPath='cookieapp-staging.beeclever.app' } wl.push(GDPR_LC_scriptPath); var checkIsBlackListed=function (src) { setBC_GDPR_LEGAL_custom_cookies(); if (src ===null) { return null } if (!!window.TrustedScriptURL && src instanceof TrustedScriptURL) { src=src.toString() } var r=!1; for (var x=thirdPartyScriptDefinition.length - 1; x >=0; x--) { var bSrc=thirdPartyScriptDefinition[x]['src']; if (src.indexOf(bSrc) !==-1 && src.toLowerCase().indexOf('jquery') ===-1) { r=x } } wl.forEach(function (wSrc) { if (src.indexOf(wSrc) !==-1) { r=false } }); if (r !==false) { function getTCookieName(name, index) { var tCookieObject=thirdPartyScriptDefinition[index]; if (tCookieObject !==undefined) { var cookies=[]; thirdPartyScriptDefinition.forEach(function (cookie) { if (cookie['src'] ===tCookieObject['src']) { cookies.push(cookie) } }); var tCookieName=tCookieObject['cookie']; if (tCookieObject['domain'] !==document.location.host) { tCookieName=tCookieObject['cookie'] + '$%bc%$' + tCookieObject['domain'] } if (tCookieName ===name && tCookieObject['domain'] ===window['BC_GDPR_LEGAL_custom_cookies']['list'][name]['domain']) { if (window['BC_GDPR_LEGAL_custom_cookies']['list'][name]['userSetting']) { index=!1 } } cookies.forEach(function (cookie) { if (window['BC_GDPR_LEGAL_custom_cookies']['list'][cookie['cookie']] !==undefined && window['BC_GDPR_LEGAL_custom_cookies']['list'][cookie['cookie']]['userSetting']) { index=!1 } }); return index } return !1 };var cookieListKeys=Array.from(Object.keys(window['BC_GDPR_LEGAL_custom_cookies']['list'])); if (cookieListKeys.length > 0) { Array.from(Object.keys(window['BC_GDPR_LEGAL_custom_cookies']['list'])).forEach(function (cookieName) { r=getTCookieName(cookieName.toString(), r) }) } else { for (var x=thirdPartyScriptDefinition.length - 1; x >=0; x--) { var tCookie=thirdPartyScriptDefinition[x]; if (src.indexOf(tCookie['src']) !==-1) { r=tCookie['cookie'] + '$%bc%$' + tCookie['domain'] } } return r } } return r }; window.scriptElementsHidden=window.scriptElementsHidden || []; window.callbackFunc=function (elem, args) { for (var x=0; x < elem.length; x++) { if (elem[x] ===null || elem[x] ===undefined || elem[x]['nodeName'] ===undefined) { return } if (elem[x]['nodeName'].toLowerCase() =='script') { if (elem[x].hasAttribute('src')) { if (document.querySelector('[src="https://cookieapp-staging.beeclever.app/js/get-script.php"]') !==null) { elem[x]=document.createElement('script'); elem[x].setAttribute('bc_empty_script_tag', '') } var blackListed=checkIsBlackListed(elem[x].getAttribute('src')); var fName=!1; try { new Error() } catch (e) { var caller=e.stack.split('\n'); var x=0; for (; x < caller.length; x++) { caller[x]=caller[x].trim(); caller[x]=caller[x].replace('at ', ''); caller[x]=caller[x].substr(0, caller[x].indexOf(' ')); caller[x]=caller[x].replace('Array.', '') } for (; x >=0; x--) { if (caller[x] ==='ICS' && x > 0) { if (caller[x - 1] in window['BC_GDPR_LEGAL_custom_cookies']['list']) { fName=caller[x - 1] } } } } if (fName ===!1 && blackListed !==!1) { elem[x].setAttribute('type', 'javascript/blocked'); elem[x].setAttribute('cookie', blackListed) } else if (blackListed !==!0 && elem[x].getAttribute('type') ==='javascript/blocked') { elem[x].setAttribute('type', 'javascript') } if (fName) { elem[x].setAttribute("data-callerName", fName) } elem[x].setAttribute('src', elem[x].getAttribute('src')) } if (elem[x]['type'] =='javascript/blocked') { window.scriptElementsHidden.push(elem[x]); elem[x]=document.createElement('script'); elem[x].setAttribute('bc_empty_script_tag', '') } } } }; const appendChild=Element.prototype.appendChild, append=Element.prototype.append, replaceWith=Element.prototype.replaceWith, insertNode=Element.prototype.insertNode, insertBefore=Element.prototype.insertBefore; Element.prototype.appendChild=function(){const ctx=this; window.callbackFunc.call(ctx, arguments); return appendChild.apply(ctx, arguments) }; Element.prototype.append=function(){const ctx=this; window.callbackFunc.call(ctx, arguments); return append.apply(ctx, arguments) }; Element.prototype.replaceWith=function(){const ctx=this; window.callbackFunc.call(ctx, arguments); return replaceWith.apply(ctx, arguments) }; Element.prototype.insertNode=function(){const ctx=this; window.callbackFunc.call(ctx, arguments); return insertNode.apply(ctx, arguments) }; Element.prototype.insertBefore=function(){const ctx=this; window.callbackFunc.call(ctx, arguments); try { return insertBefore.apply(ctx, arguments) } catch (e) { arguments[1]=document.scripts[0]; return insertBefore.apply(ctx, arguments) } };};if (!window.msCrypto) { Array.from(document.head.querySelectorAll('[bc_empty_script_tag=""]')).forEach(function (script) { script.remove() })};if (window.GDPR_LC_ZLoad_loaded ===undefined) { GDPR_LC_ZLoad(); window.GDPR_LC_ZLoad_loaded=true}
})();
